services:
  mysql:
    container_name: mysql
    build: 
      context: ./mysql
      dockerfile: Dockerfile
      args:
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql/data:/var/lib/mysql
    
  gophish:
    container_name: gophish
    build:
      context: ./gophish
      dockerfile: Dockerfile
      args:
        DB_HOST: mysql
        DB_USER: ${MYSQL_USER}
        DB_PASS: ${MYSQL_PASSWORD}
    depends_on:
      - mysql

  evilgophish:
    container_name: evilgophish
    build:
      context: ./evilgophish
      dockerfile: Dockerfile
      args:
        DB_HOST: mysql
        DB_USER: ${MYSQL_USER}
        DB_PASS: ${MYSQL_PASSWORD}
    depends_on:
      - mysql

  # evilginx:
  #   container_name: evilginx
  #   build:
  #     context: ./evilginx
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./evilginx/conf/:/etc/evilginx/:ro
  #     - ./evilginx/phishlets/:/opt/evilginx/phishlets/:ro

  antirelay:
    container_name: antirelay
    build:
      context: ./antirelay
      dockerfile: Dockerfile

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - ./nginx/nginx/conf.d:/etc/nginx/conf.d:rw
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - gophish
      - evilgophish
      - antirelay

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    depends_on:
      - nginx
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

